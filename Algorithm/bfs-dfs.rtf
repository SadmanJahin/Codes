{\rtf1\ansi\deff0\deftab720{\fonttbl{\f0\fmodern Courier New;}}
{\colortbl\red0\green0\blue0;\red255\green255\blue255;\red200\green200\blue200;\red0\green0\blue0;\red160\green160\blue160;\red190\green190\blue230;\red128\green128\blue255;\red0\green128\blue128;\red128\green0\blue0;\red240\green0\blue240;\red240\green200\blue240;\red0\green0\blue160;\red135\green135\blue200;\red0\green160\blue0;\red154\green200\blue154;\red190\green0\blue190;\red190\green137\blue190;\red0\green0\blue255;\red190\green190\blue255;\red224\green160\blue0;\red224\green206\blue159;\red132\green160\blue132;\red255\green0\blue0;\red255\green200\blue200;\red128\green255\blue255;\red64\green64\blue128;\red133\green133\blue172;}
{\info{\comment Generated by the Code::Blocks RTF Exporter plugin}
{\title Untitled}}

\deflang1033\pard\plain\f0\fs16   1  \cb3\cf13 #include<stdio.h>
\par \cb1\cf0\ul0\i0\b0   2  \cb3\cf13 #define qsize 104
\par \cb1\cf0\ul0\i0\b0   3  
\par \cb1\cf0\ul0\i0\b0   4  \cb3\cf11\b int \b0\cb1\cf0 data\cb3\cf22 [\cb1\cf0 qsize\cb3\cf22 +\cb3\cf9 1\cb3\cf22 ];
\par \cb1\cf0\ul0\i0\b0   5  \cb3\cf11\b int \b0\cb1\cf0 head\cb3\cf22 =\cb3\cf9 0\cb3\cf22 ,\cb1\cf0 tail\cb3\cf22 =\cb3\cf9 0\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0   6  \cb3\cf11\b int \b0\cb1\cf0 distance\cb3\cf22 [\cb3\cf9 40\cb3\cf22 ];
\par \cb1\cf0\ul0\i0\b0   7  \cb3\cf11\b int \b0\cb1\cf0 parent\cb3\cf22 [\cb3\cf9 40\cb3\cf22 ];
\par \cb1\cf0\ul0\i0\b0   8  \cb3\cf11\b void \b0\cb1\cf0 enqueue \cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 item\cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0   9  \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  10  
\par \cb1\cf0\ul0\i0\b0  11   \cb3\cf11\b if \b0\cb3\cf22 (((\cb1\cf0 tail\cb3\cf22 )+\cb3\cf9 1\cb3\cf22 )%(\cb1\cf0 qsize\cb3\cf22 +\cb3\cf9 1\cb3\cf22 )== (\cb1\cf0 head\cb3\cf22 ))
\par \cb1\cf0\ul0\i0\b0  12      \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "Queue is Full\\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  13  
\par \cb1\cf0\ul0\i0\b0  14  
\par \cb1\cf0\ul0\i0\b0  15    \cb3\cf11\b else
\par \cb1\cf0\ul0\i0\b0  16    \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  17      \cb1\cf0 data\cb3\cf22 [\cb1\cf0 tail\cb3\cf22 ]=\cb1\cf0 item\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  18      \cb3\cf22 (\cb1\cf0 tail\cb3\cf22 )=((\cb1\cf0 tail\cb3\cf22 )+\cb3\cf9 1\cb3\cf22 )%(\cb1\cf0 qsize\cb3\cf22 +\cb3\cf9 1\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  19    \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  20  \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  21  
\par \cb1\cf0\ul0\i0\b0  22  \cb3\cf11\b int \b0\cb1\cf0 dequeue \cb3\cf22 ()
\par \cb1\cf0\ul0\i0\b0  23  \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  24     \cb3\cf11\b int \b0\cb1\cf0 item\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  25  
\par \cb1\cf0\ul0\i0\b0  26  
\par \cb1\cf0\ul0\i0\b0  27      \cb3\cf11\b if\b0\cb3\cf22 ( (\cb1\cf0 tail\cb3\cf22 ) == (\cb1\cf0 head\cb3\cf22 ))
\par \cb1\cf0\ul0\i0\b0  28      \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  29      \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\nQueue is empty\\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  30      \cb3\cf11\b return \b0\cb3\cf22 -\cb3\cf9 1\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  31      \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  32  
\par \cb1\cf0\ul0\i0\b0  33      \cb1\cf0 item \cb3\cf22 = \cb1\cf0 data\cb3\cf22 [(\cb1\cf0 head\cb3\cf22 )];
\par \cb1\cf0\ul0\i0\b0  34      \cb1\cf0 head\cb3\cf22 =(\cb1\cf0 head\cb3\cf22 +\cb3\cf9 1\cb3\cf22 )%(\cb1\cf0 qsize\cb3\cf22 +\cb3\cf9 1\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  35  
\par \cb1\cf0\ul0\i0\b0  36      \cb3\cf11\b return \b0\cb1\cf0 item\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  37  
\par \cb1\cf0\ul0\i0\b0  38  \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  39  
\par \cb1\cf0\ul0\i0\b0  40  \cb1\cf0 printData\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 nodeStart\cb3\cf22 ,\cb3\cf11\b int \b0\cb1\cf0 nodeDes\cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0  41  \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  42      \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\nShortest Path %d to %d is :"\cb3\cf22 ,\cb1\cf0 nodeStart\cb3\cf22 ,\cb1\cf0 nodeDes\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  43     \cb3\cf11\b int \b0\cb1\cf0 i\cb3\cf22 =\cb1\cf0 nodeDes\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  44      \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "%d "\cb3\cf22 ,\cb1\cf0 i\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  45      \cb3\cf11\b while\b0\cb3\cf22 (\cb1\cf0 parent\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]!=-\cb3\cf9 1\cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0  46      \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  47          \cb3\cf11\b int \b0\cb1\cf0 value\cb3\cf22 =\cb1\cf0 parent\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ];
\par \cb1\cf0\ul0\i0\b0  48          \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "%d "\cb3\cf22 ,\cb1\cf0 value\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  49          \cb1\cf0 i\cb3\cf22 =\cb1\cf0 value\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  50      \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  51      \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\nWith distance %d"\cb3\cf22 ,\cb1\cf0 distance\cb3\cf22 [\cb1\cf0 nodeDes\cb3\cf22 ]);
\par \cb1\cf0\ul0\i0\b0  52  \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  53  
\par \cb1\cf0\ul0\i0\b0  54  \cb3\cf11\b int \b0\cb1\cf0 main \cb3\cf22 (\cb3\cf11\b void\b0\cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0  55  
\par \cb1\cf0\ul0\i0\b0  56  \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  57      \cb3\cf11\b int \b0\cb1\cf0 i\cb3\cf22 ,\cb1\cf0 j\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  58  \cb3\cf11\b int \b0\cb1\cf0 vertex\cb3\cf22 ,\cb1\cf0 edges\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  59  \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "Enter The Number of Vertices and Egdes: "\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  60  \cb1\cf0 scanf\cb3\cf22 (\cb3\cf17 "%d %d"\cb3\cf22 ,&\cb1\cf0 vertex\cb3\cf22 ,&\cb1\cf0 edges\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  61  \cb3\cf11\b int \b0\cb1\cf0 graph\cb3\cf22 [\cb1\cf0 vertex\cb3\cf22 ][\cb1\cf0 vertex\cb3\cf22 ];
\par \cb1\cf0\ul0\i0\b0  62  \cb3\cf11\b for\b0\cb3\cf22 (\cb1\cf0 i\cb3\cf22 =\cb3\cf9 0\cb3\cf22 ;\cb1\cf0 i\cb3\cf22 <\cb1\cf0 vertex\cb3\cf22 ;\cb1\cf0 i\cb3\cf22 ++)
\par \cb1\cf0\ul0\i0\b0  63      \cb3\cf11\b for\b0\cb3\cf22 (\cb1\cf0 j\cb3\cf22 =\cb3\cf9 0\cb3\cf22 ;\cb1\cf0 j\cb3\cf22 <\cb1\cf0 vertex\cb3\cf22 ;\cb1\cf0 j\cb3\cf22 ++)
\par \cb1\cf0\ul0\i0\b0  64          \cb1\cf0 graph\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ][\cb1\cf0 j\cb3\cf22 ]=\cb3\cf9 0\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  65  
\par \cb1\cf0\ul0\i0\b0  66      \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\nEnter Graph Connections: "\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  67      \cb3\cf11\b for\b0\cb3\cf22 (\cb1\cf0 i\cb3\cf22 =\cb3\cf9 0\cb3\cf22 ;\cb1\cf0 i\cb3\cf22 <\cb1\cf0 edges\cb3\cf22 ;\cb1\cf0 i\cb3\cf22 ++)
\par \cb1\cf0\ul0\i0\b0  68      \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  69          \cb3\cf11\b int \b0\cb1\cf0 node1\cb3\cf22 ,\cb1\cf0 node2\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  70          \cb1\cf0 scanf\cb3\cf22 (\cb3\cf17 "%d %d"\cb3\cf22 ,&\cb1\cf0 node1\cb3\cf22 ,&\cb1\cf0 node2\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  71          \cb1\cf0 graph\cb3\cf22 [\cb1\cf0 node1\cb3\cf22 ][\cb1\cf0 node2\cb3\cf22 ]=\cb3\cf9 1\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  72         \cb3\cf5 // graph[node2][node1]=1;
\par \cb1\cf0\ul0\i0\b0  73      \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  74      \cb3\cf11\b for\b0\cb3\cf22 (\cb1\cf0 i\cb3\cf22 =\cb3\cf9 0\cb3\cf22 ;\cb1\cf0 i\cb3\cf22 <\cb1\cf0 vertex\cb3\cf22 ;\cb1\cf0 i\cb3\cf22 ++)
\par \cb1\cf0\ul0\i0\b0  75        \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  76        \cb3\cf11\b for\b0\cb3\cf22 (\cb1\cf0 j\cb3\cf22 =\cb3\cf9 0\cb3\cf22 ;\cb1\cf0 j\cb3\cf22 <\cb1\cf0 vertex\cb3\cf22 ;\cb1\cf0 j\cb3\cf22 ++)
\par \cb1\cf0\ul0\i0\b0  77        \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  78         \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "%d "\cb3\cf22 ,\cb1\cf0 graph\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ][\cb1\cf0 j\cb3\cf22 ]);
\par \cb1\cf0\ul0\i0\b0  79        \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  80        \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  81        \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  82        \cb3\cf11\b int \b0\cb1\cf0 nodeS\cb3\cf22 ,\cb1\cf0 nodeD\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  83      \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\nEnter the Starting Node: "\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  84      \cb1\cf0 scanf\cb3\cf22 (\cb3\cf17 "%d"\cb3\cf22 ,&\cb1\cf0 nodeS\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  85       \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\nEnter the Destination: "\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  86      \cb1\cf0 scanf\cb3\cf22 (\cb3\cf17 "%d"\cb3\cf22 ,&\cb1\cf0 nodeD\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  87      \cb1\cf0 enqueue\cb3\cf22 (\cb1\cf0 nodeS\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  88  
\par \cb1\cf0\ul0\i0\b0  89      \cb3\cf11\b for\b0\cb3\cf22 (\cb1\cf0 i\cb3\cf22 =\cb3\cf9 0\cb3\cf22 ;\cb1\cf0 i\cb3\cf22 <\cb3\cf9 5\cb3\cf22 ;\cb1\cf0 i\cb3\cf22 ++)
\par \cb1\cf0\ul0\i0\b0  90          \cb1\cf0 parent\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]=-\cb3\cf9 1\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  91      \cb3\cf11\b for\b0\cb3\cf22 (\cb1\cf0 i\cb3\cf22 =\cb3\cf9 0\cb3\cf22 ;\cb1\cf0 i\cb3\cf22 <\cb3\cf9 5\cb3\cf22 ;\cb1\cf0 i\cb3\cf22 ++)
\par \cb1\cf0\ul0\i0\b0  92          \cb1\cf0 distance\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]=\cb3\cf9 0\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  93  
\par \cb1\cf0\ul0\i0\b0  94      \cb3\cf11\b while\b0\cb3\cf22 (\cb1\cf0 head\cb3\cf22 !=\cb1\cf0 tail\cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0  95      \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  96         \cb3\cf11\b int \b0\cb1\cf0 x\cb3\cf22 =\cb1\cf0 dequeue\cb3\cf22 ();
\par \cb1\cf0\ul0\i0\b0  97        \cb3\cf11\b for\b0\cb3\cf22 (\cb1\cf0 i\cb3\cf22 =\cb3\cf9 0\cb3\cf22 ;\cb1\cf0 i\cb3\cf22 <\cb1\cf0 vertex\cb3\cf22 ;\cb1\cf0 i\cb3\cf22 ++)
\par \cb1\cf0\ul0\i0\b0  98        \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  99  
\par \cb1\cf0\ul0\i0\b0 100        \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 graph\cb3\cf22 [\cb1\cf0 x\cb3\cf22 ][\cb1\cf0 i\cb3\cf22 ] == \cb3\cf9 1 \cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0 101        \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0 102          \cb1\cf0 parent\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]=\cb1\cf0 x\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0 103          \cb1\cf0 distance\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]=\cb1\cf0 distance\cb3\cf22 [\cb1\cf0 x\cb3\cf22 ]+\cb3\cf9 1\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0 104          \cb1\cf0 enqueue\cb3\cf22 (\cb1\cf0 i\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0 105        \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0 106  
\par \cb1\cf0\ul0\i0\b0 107        \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0 108      \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0 109  \cb1\cf0 printData\cb3\cf22 (\cb1\cf0 nodeS\cb3\cf22 ,\cb1\cf0 nodeD\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0 110  \cb3\cf22 \}
\par }