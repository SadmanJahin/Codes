{\rtf1\ansi\deff0\deftab720{\fonttbl{\f0\fmodern Courier New;}}
{\colortbl\red0\green0\blue0;\red255\green255\blue255;\red200\green200\blue200;\red0\green0\blue0;\red160\green160\blue160;\red190\green190\blue230;\red128\green128\blue255;\red0\green128\blue128;\red128\green0\blue0;\red240\green0\blue240;\red240\green200\blue240;\red0\green0\blue160;\red135\green135\blue200;\red0\green160\blue0;\red154\green200\blue154;\red190\green0\blue190;\red190\green137\blue190;\red0\green0\blue255;\red190\green190\blue255;\red224\green160\blue0;\red224\green206\blue159;\red132\green160\blue132;\red255\green0\blue0;\red255\green200\blue200;\red128\green255\blue255;\red64\green64\blue128;\red133\green133\blue172;}
{\info{\comment Generated by the Code::Blocks RTF Exporter plugin}
{\title Untitled}}

\deflang1033\pard\plain\f0\fs16   1  \cb3\cf13 #include <stdio.h>
\par \cb1\cf0\ul0\i0\b0   2  \cb3\cf13 #include <stdlib.h>
\par \cb1\cf0\ul0\i0\b0   3  
\par \cb1\cf0\ul0\i0\b0   4  \cb3\cf11\b typedef struct \b0\cb1\cf0 node Node\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0   5  
\par \cb1\cf0\ul0\i0\b0   6  \cb3\cf11\b struct \b0\cb1\cf0 Node \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0   7      \cb3\cf11\b int \b0\cb1\cf0 data\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0   8      \cb3\cf11\b struct \b0\cb1\cf0 Node\cb3\cf22 * \cb1\cf0 next\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0   9  \cb3\cf22 \};
\par \cb1\cf0\ul0\i0\b0  10  \cb3\cf11\b struct \b0\cb1\cf0 Node\cb3\cf22 * \cb1\cf0 top\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  11  
\par \cb1\cf0\ul0\i0\b0  12  
\par \cb1\cf0\ul0\i0\b0  13  \cb3\cf11\b void \b0\cb1\cf0 push\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 data\cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0  14  \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  15  
\par \cb1\cf0\ul0\i0\b0  16      \cb3\cf11\b struct \b0\cb1\cf0 Node\cb3\cf22 * \cb1\cf0 newNode\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  17      \cb1\cf0 newNode \cb3\cf22 = (\cb3\cf11\b struct \b0\cb1\cf0 Node\cb3\cf22 *)\cb1\cf0 malloc\cb3\cf22 (\cb3\cf11\b sizeof\b0\cb3\cf22 (\cb3\cf11\b struct \b0\cb1\cf0 Node\cb3\cf22 ));
\par \cb1\cf0\ul0\i0\b0  18  
\par \cb1\cf0\ul0\i0\b0  19  
\par \cb1\cf0\ul0\i0\b0  20      \cb3\cf11\b if \b0\cb3\cf22 (!\cb1\cf0 newNode\cb3\cf22 ) \{
\par \cb1\cf0\ul0\i0\b0  21          \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\nHeap Overflow"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  22          \cb1\cf0 exit\cb3\cf22 (\cb3\cf9 1\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  23      \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  24  
\par \cb1\cf0\ul0\i0\b0  25  
\par \cb1\cf0\ul0\i0\b0  26      \cb1\cf0 newNode\cb3\cf22 ->\cb1\cf0 data \cb3\cf22 = \cb1\cf0 data\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  27  
\par \cb1\cf0\ul0\i0\b0  28  
\par \cb1\cf0\ul0\i0\b0  29      \cb1\cf0 newNode\cb3\cf22 ->\cb1\cf0 next \cb3\cf22 = \cb1\cf0 top\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  30  
\par \cb1\cf0\ul0\i0\b0  31  
\par \cb1\cf0\ul0\i0\b0  32      \cb1\cf0 top \cb3\cf22 = \cb1\cf0 newNode\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  33  \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  34  
\par \cb1\cf0\ul0\i0\b0  35  
\par \cb1\cf0\ul0\i0\b0  36  \cb3\cf11\b int \b0\cb1\cf0 isEmpty\cb3\cf22 ()
\par \cb1\cf0\ul0\i0\b0  37  \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  38      \cb3\cf11\b return \b0\cb1\cf0 top \cb3\cf22 == \cb1\cf0 NULL\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  39  \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  40  
\par \cb1\cf0\ul0\i0\b0  41  
\par \cb1\cf0\ul0\i0\b0  42  \cb3\cf11\b int \b0\cb1\cf0 peek\cb3\cf22 ()
\par \cb1\cf0\ul0\i0\b0  43  \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  44  
\par \cb1\cf0\ul0\i0\b0  45      \cb3\cf11\b if \b0\cb3\cf22 (!\cb1\cf0 isEmpty\cb3\cf22 (\cb1\cf0 top\cb3\cf22 ))
\par \cb1\cf0\ul0\i0\b0  46          \cb3\cf11\b return \b0\cb1\cf0 top\cb3\cf22 ->\cb1\cf0 data\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  47      \cb3\cf11\b else
\par \cb1\cf0\ul0\i0\b0  48          \cb1\cf0 exit\cb3\cf22 (\cb1\cf0 EXIT_FAILURE\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  49  \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  50  
\par \cb1\cf0\ul0\i0\b0  51  
\par \cb1\cf0\ul0\i0\b0  52  
\par \cb1\cf0\ul0\i0\b0  53  \cb3\cf11\b void \b0\cb1\cf0 pop\cb3\cf22 ()
\par \cb1\cf0\ul0\i0\b0  54  \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  55      \cb3\cf11\b struct \b0\cb1\cf0 Node\cb3\cf22 * \cb1\cf0 newNode\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  56  
\par \cb1\cf0\ul0\i0\b0  57  
\par \cb1\cf0\ul0\i0\b0  58      \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 top \cb3\cf22 == \cb1\cf0 NULL\cb3\cf22 ) \{
\par \cb1\cf0\ul0\i0\b0  59          \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\nStack Underflow"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  60          \cb1\cf0 exit\cb3\cf22 (\cb3\cf9 1\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  61      \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  62      \cb3\cf11\b else \b0\cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  63  
\par \cb1\cf0\ul0\i0\b0  64          \cb1\cf0 newNode \cb3\cf22 = \cb1\cf0 top\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  65  
\par \cb1\cf0\ul0\i0\b0  66  
\par \cb1\cf0\ul0\i0\b0  67          \cb1\cf0 top \cb3\cf22 = \cb1\cf0 top\cb3\cf22 ->\cb1\cf0 next\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  68  
\par \cb1\cf0\ul0\i0\b0  69  
\par \cb1\cf0\ul0\i0\b0  70          \cb1\cf0 newNode\cb3\cf22 ->\cb1\cf0 next \cb3\cf22 = \cb1\cf0 NULL\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  71  
\par \cb1\cf0\ul0\i0\b0  72  
\par \cb1\cf0\ul0\i0\b0  73          \cb1\cf0 free\cb3\cf22 (\cb1\cf0 newNode\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  74      \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  75  \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  76  
\par \cb1\cf0\ul0\i0\b0  77  \cb3\cf11\b void \b0\cb1\cf0 display\cb3\cf22 ()
\par \cb1\cf0\ul0\i0\b0  78  \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  79      \cb3\cf11\b struct \b0\cb1\cf0 Node\cb3\cf22 * \cb1\cf0 temp\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  80  
\par \cb1\cf0\ul0\i0\b0  81  
\par \cb1\cf0\ul0\i0\b0  82      \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 top \cb3\cf22 == \cb1\cf0 NULL\cb3\cf22 ) \{
\par \cb1\cf0\ul0\i0\b0  83          \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\nStack Underflow"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  84          \cb1\cf0 exit\cb3\cf22 (\cb3\cf9 1\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  85      \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  86      \cb3\cf11\b else \b0\cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  87          \cb1\cf0 temp \cb3\cf22 = \cb1\cf0 top\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  88          \cb3\cf11\b while \b0\cb3\cf22 (\cb1\cf0 temp \cb3\cf22 != \cb1\cf0 NULL\cb3\cf22 ) \{
\par \cb1\cf0\ul0\i0\b0  89  
\par \cb1\cf0\ul0\i0\b0  90  
\par \cb1\cf0\ul0\i0\b0  91              \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "%d "\cb3\cf22 , \cb1\cf0 temp\cb3\cf22 ->\cb1\cf0 data\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  92  
\par \cb1\cf0\ul0\i0\b0  93  
\par \cb1\cf0\ul0\i0\b0  94              \cb1\cf0 temp \cb3\cf22 = \cb1\cf0 temp\cb3\cf22 ->\cb1\cf0 next\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  95          \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  96      \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  97  \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  98  
\par \cb1\cf0\ul0\i0\b0  99  
\par \cb1\cf0\ul0\i0\b0 100  
\par \cb1\cf0\ul0\i0\b0 101  \cb3\cf11\b int \b0\cb1\cf0 main\cb3\cf22 (\cb3\cf11\b void\b0\cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0 102  \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0 103  
\par \cb1\cf0\ul0\i0\b0 104      \cb1\cf0 push\cb3\cf22 (\cb3\cf9 11\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0 105      \cb1\cf0 push\cb3\cf22 (\cb3\cf9 22\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0 106      \cb1\cf0 push\cb3\cf22 (\cb3\cf9 33\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0 107      \cb1\cf0 push\cb3\cf22 (\cb3\cf9 44\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0 108  
\par \cb1\cf0\ul0\i0\b0 109  
\par \cb1\cf0\ul0\i0\b0 110      \cb1\cf0 display\cb3\cf22 ();
\par \cb1\cf0\ul0\i0\b0 111  
\par \cb1\cf0\ul0\i0\b0 112  
\par \cb1\cf0\ul0\i0\b0 113      \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\nTop element is %d\\n"\cb3\cf22 , \cb1\cf0 peek\cb3\cf22 ());
\par \cb1\cf0\ul0\i0\b0 114  
\par \cb1\cf0\ul0\i0\b0 115  
\par \cb1\cf0\ul0\i0\b0 116      \cb1\cf0 pop\cb3\cf22 ();
\par \cb1\cf0\ul0\i0\b0 117      \cb1\cf0 pop\cb3\cf22 ();
\par \cb1\cf0\ul0\i0\b0 118  
\par \cb1\cf0\ul0\i0\b0 119  
\par \cb1\cf0\ul0\i0\b0 120      \cb1\cf0 display\cb3\cf22 ();
\par \cb1\cf0\ul0\i0\b0 121  
\par \cb1\cf0\ul0\i0\b0 122  
\par \cb1\cf0\ul0\i0\b0 123      \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\nTop element is %d\\n"\cb3\cf22 , \cb1\cf0 peek\cb3\cf22 ());
\par \cb1\cf0\ul0\i0\b0 124      \cb3\cf11\b return \b0\cb3\cf9 0\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0 125  \cb3\cf22 \}
\par }